{"version":3,"sources":["CustomHooks.js","App.js","Validation.js","index.js"],"names":["useSignUpForm","useState","name","email","password1","password2","inputs","setInputs","showPassword1","valuesPassword1","setValuesPassword1","isValid","setIsValid","isFocus","setIsFocus","isBlur","setIsBlur","showPassword2","valuesPassword2","setValuesPassword2","handleSubmit","event","a","preventDefault","newUser","body","JSON","stringify","alert","err","console","error","response","data","handleInputChange","nameValid","substring","lastIndexOf","length","persist","target","value","handleClickShowPassword1","fieldName","handleClickShowPassword2","focusHandler","log","blurHandler","validLength","upperCase","lowerCase","specialChar","Signup","requiredLength","setValidLength","setUpperCase","setLowerCase","setSpecialChar","useEffect","toLowerCase","toUpperCase","test","usePasswordValidation","className","onSubmit","disabled","type","autoComplete","onChange","required","maxLength","onFocus","onBlur","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d0d6671.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useSignUpForm = () => {\r\n  const [inputs, setInputs] = useState(() => {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      password1: \"\",\r\n      password2: \"\",\r\n    };\r\n  });\r\n\r\n  const { name, email, password1, password2 } = inputs;\r\n\r\n  const [valuesPassword1, setValuesPassword1] = useState({\r\n    showPassword1: false,\r\n  });\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFocus, setIsFocus] = useState(false);\r\n  const [isBlur, setIsBlur] = useState(false);\r\n\r\n  const [valuesPassword2, setValuesPassword2] = useState({\r\n    showPassword2: false,\r\n  });\r\n  const focusHandler = (event) => {\r\n    setIsFocus(true);\r\n\r\n    console.log(event);\r\n  };\r\n\r\n  const blurHandler = (event) => {\r\n    setIsFocus(false);\r\n    setIsBlur(true);\r\n\r\n    if (\r\n      inputs.password1 &&\r\n      inputs.validLength &&\r\n      inputs.upperCase &&\r\n      inputs.lowerCase &&\r\n      inputs.specialChar\r\n    ) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n\r\n    console.log(event);\r\n  };\r\n\r\n  const handleClickShowPassword1 = (fieldName) => {\r\n    setValuesPassword1({\r\n      showPassword1:\r\n        fieldName === valuesPassword1.showPassword1 ? \"\" : fieldName,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword2 = (fieldName) => {\r\n    setValuesPassword2({\r\n      showPassword2:\r\n        fieldName === valuesPassword2.showPassword2 ? \"\" : fieldName,\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const nameValid = email.substring(0, email.lastIndexOf(\"@\"));\r\n    if (name.length < 12) {\r\n      inputs.name = nameValid;\r\n    } else {\r\n      inputs.name = email.substring(0, 12);\r\n    }\r\n\r\n    event.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const newUser = { name, email, password1, password2 };\r\n    try {\r\n      const body = JSON.stringify(newUser);\r\n      alert(body);\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  return {\r\n    handleSubmit,\r\n    handleInputChange,\r\n    handleClickShowPassword1,\r\n    handleClickShowPassword2,\r\n    focusHandler,\r\n    blurHandler,\r\n\r\n    valuesPassword1,\r\n    valuesPassword2,\r\n    inputs,\r\n    isFocus,\r\n    isBlur,\r\n    isValid,\r\n  };\r\n};\r\n\r\nexport default useSignUpForm;\r\n","import useSignUpForm from \"./CustomHooks\";\r\nimport { usePasswordValidation } from \"./Validation\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Signup = () => {\r\n  const {\r\n    isBlur,\r\n    isFocus,\r\n    inputs,\r\n\r\n    valuesPassword1,\r\n    valuesPassword2,\r\n    focusHandler,\r\n    blurHandler,\r\n\r\n    handleInputChange,\r\n    handleSubmit,\r\n    handleClickShowPassword1,\r\n    handleClickShowPassword2,\r\n  } = useSignUpForm();\r\n\r\n  const [validLength, upperCase, lowerCase, specialChar] =\r\n    usePasswordValidation({\r\n      password1: inputs.password1,\r\n      password2: inputs.password2,\r\n    });\r\n\r\n  return (\r\n    <div\r\n      className=\" flex h-screen justify-center \r\n                items-center\"\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"bg-white min-w-max max-w-[40%] rounded-xl border-2 border-gray-200 shadow-xl rounded  px-8 pt-6 pb-8 mb-4\"\r\n      >\r\n        {/*email */}\r\n        <div className=\"mb-4 \">\r\n          <label className=\"  block text-gray-400  text-sm font-bold mb-2\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            disabled={inputs.password2 && true}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={inputs.email}\r\n            required\r\n            className=\"border-2 bg-gray-100 border-gray-200 hover:border-blue  focus:border-blue focus:bg-white  focus:outline-none disabled:border-1 disabled:border-gray-100 disabled:bg-gray-50  disabled:cursor-auto rounded-full w-full py-2 px-3 text-gray-400 leading-tight \"\r\n          />\r\n        </div>\r\n        {/*name */}\r\n        <div className=\"mb-4\">\r\n          <label className=\" block text-gray-400 text-sm font-bold mb-2\">\r\n            User name\r\n          </label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            disabled={inputs.password2 && true}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleInputChange}\r\n            value={inputs.name}\r\n            maxLength={12}\r\n            required\r\n            className=\"  border-2 bg-gray-100 border-gray-200 hover:border-blue  focus:border-blue focus:bg-white  focus:outline-none disabled:border-1 disabled:border-gray-100 disabled:bg-gray-50  disabled:cursor-auto rounded-full w-full py-2 px-3 text-gray-400 leading-tight \"\r\n          />\r\n        </div>\r\n        {/*password*/}\r\n        <div className=\"mb-4 relative\">\r\n          <label className=\"block text-gray-400 text-sm font-bold mb-2\">\r\n            Password\r\n          </label>\r\n          {/*passwordBorder*/}\r\n          {!isBlur && inputs.password1 && validLength ? (\r\n            <input\r\n              type={\r\n                valuesPassword1.showPassword1 === \"password1\"\r\n                  ? \"text\"\r\n                  : \"password\"\r\n              }\r\n              name=\"password1\"\r\n              onChange={handleInputChange}\r\n              value={inputs.password1}\r\n              onFocus={focusHandler}\r\n              onBlur={blurHandler}\r\n              required\r\n              className=\" border-2 bg-white border-green  rounded-full w-full py-2 px-3 text-gray-400 leading-tight focus:outline-none disabled:bg-orange-100 disabled:cursor-auto\"\r\n            />\r\n          ) : inputs.password1 && !validLength ? (\r\n            <input\r\n              type={\r\n                valuesPassword1.showPassword1 === \"password1\"\r\n                  ? \"text\"\r\n                  : \"password\"\r\n              }\r\n              name=\"password1\"\r\n              onChange={handleInputChange}\r\n              value={inputs.password1}\r\n              required\r\n              className=\" border-2 bg-white border-red  rounded-full w-full py-2 px-3 text-gray-400 leading-tight focus:outline-none\"\r\n            />\r\n          ) : (\r\n            <input\r\n              type={\r\n                valuesPassword1.showPassword1 === \"password1\"\r\n                  ? \"text\"\r\n                  : \"password\"\r\n              }\r\n              name=\"password1\"\r\n              onChange={handleInputChange}\r\n              value={inputs.password1}\r\n              required\r\n              className=\" border-2 bg-gray-100 border-gray-200  rounded-full w-full py-2 px-3 text-gray-400 leading-tight focus:outline-none\"\r\n            />\r\n          )}\r\n\r\n          {/*showHidePasswordPicture */}\r\n          <div\r\n            className=\"absolute top-9 right-0 pr-3 flex \"\r\n            onClick={() => handleClickShowPassword1(\"password1\")}\r\n          >\r\n            {!valuesPassword1.showPassword1 ? (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6 \"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"grey\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\r\n                />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"grey\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                />\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/*rePassword */}\r\n        <div className=\"mb-4 relative\">\r\n          <label className=\"block text-gray-400 text-sm font-bold mb-2\">\r\n            Re-enter Password\r\n          </label>\r\n          <input\r\n            type={\r\n              valuesPassword2.showPassword2 === \"password2\"\r\n                ? \"text\"\r\n                : \"password\"\r\n            }\r\n            name=\"password2\"\r\n            placeholder=\"Passwords should be the same\"\r\n            onChange={handleInputChange}\r\n            value={inputs.password2}\r\n            required\r\n            className=\" border-2 bg-gray-100 border-gray-200 hover:border-blue  focus:border-blue focus:bg-white  focus:outline-none disabled:border-1 disabled:border-gray-100 disabled:bg-gray-50  disabled:cursor-auto rounded-full w-full py-2 px-3 text-gray-400 leading-tight \"\r\n          />\r\n          <div\r\n            className=\"absolute inset-y-1/2 right-0 pr-3 flex  \"\r\n            onClick={() => handleClickShowPassword2(\"password2\")}\r\n          >\r\n            {!valuesPassword2.showPassword2 ? (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6 \"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"grey\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\r\n                />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"grey\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                />\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/*ValidList */}\r\n        <div>\r\n          {isFocus && (\r\n            <ul className=\"mb-6 mt-6 peer-focus: \">\r\n              {/*8 characters */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"text-gray-400 flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && validLength && (\r\n                  <span className=\" text-green flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && !validLength && (\r\n                  <span className=\"text-red flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n              </li>\r\n              {/*upperCase-lowerCase */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"flex text-gray-400 \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && upperCase && lowerCase && (\r\n                  <span className=\"flex text-green \">\r\n                    {\" \"}\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && (!upperCase || !lowerCase) && (\r\n                  <span className=\"flex text-red \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n              </li>\r\n              {/*special character */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"flex text-gray-400 \">\r\n                    {\" \"}\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && specialChar && (\r\n                  <span className=\"flex text-green \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>{\" \"}\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && !specialChar && (\r\n                  <span className=\"flex text-red \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>{\" \"}\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n          {!isBlur ? (\r\n            <ul className=\"mb-6 mt-6 peer-focus: \">\r\n              {/*8 characters */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"text-gray-400 flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && validLength && (\r\n                  <span className=\" text-green flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && !validLength && (\r\n                  <span className=\"text-red flex\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least min 8 characters\r\n                  </span>\r\n                )}\r\n              </li>\r\n              {/*upperCase-lowerCase */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"flex text-gray-400 \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && upperCase && lowerCase && (\r\n                  <span className=\"flex text-green \">\r\n                    {\" \"}\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && (!upperCase || !lowerCase) && (\r\n                  <span className=\"flex text-red \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least 1 uppercase and 1 lowercase letter\r\n                  </span>\r\n                )}\r\n              </li>\r\n              {/*special character */}\r\n              <li className=\"mb-4 flex \">\r\n                {/*default */}\r\n                {!inputs.password1 && (\r\n                  <span className=\"flex text-gray-400 \">\r\n                    {\" \"}\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 mr-4\"\r\n                      fill=\"gray\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n                {/*validText */}\r\n                {inputs.password1 && specialChar && (\r\n                  <span className=\"flex text-green \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"green\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>{\" \"}\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n                {/*noValidText */}\r\n                {inputs.password1 && !specialChar && (\r\n                  <span className=\"flex text-red \">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6\"\r\n                      fill=\"red\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"white\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>{\" \"}\r\n                    At least special characters (like ! @ % $ # ^)\r\n                  </span>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <span className=\" text-green px-20 my-6 text-base   flex\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6 mr-2 \"\r\n                fill=\"green\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"white\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                />\r\n              </svg>\r\n              All requirement met\r\n            </span>\r\n          )}\r\n        </div>\r\n        {/*subbmitButton */}\r\n        <button\r\n          disabled={\r\n            inputs.password1 !== inputs.password2 &&\r\n            !inputs.validLength &&\r\n            !inputs.upperCase &&\r\n            !inputs.lowerCase &&\r\n            !inputs.specialChar\r\n              ? true\r\n              : false\r\n          }\r\n          type=\"submit\"\r\n          className=\"mt-3 mx-auto  text-sm font-semibold\r\n            bg-orange-400  text-white rounded-lg\r\n            px-6 py-3  block shadow-xl  hover:bg-amber-700 active:bg-amber-800  focus:bg-amber-600 disabled:bg-orange-100 disabled:cursor-auto\r\ndisabled:pointer-events-none\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Signup;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const usePasswordValidation = ({\r\n  password1 = \"\",\r\n  password2 = \"\",\r\n  requiredLength = 8,\r\n}) => {\r\n  const [validLength, setValidLength] = useState(null);\r\n  // const [hasNumber, setHasNumber] = useState(null);\r\n  const [upperCase, setUpperCase] = useState(null);\r\n  const [lowerCase, setLowerCase] = useState(null);\r\n  const [specialChar, setSpecialChar] = useState(null);\r\n  //const [match, setMatch] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setValidLength(password1.length >= requiredLength);\r\n    setUpperCase(password1.toLowerCase() !== password1);\r\n    setLowerCase(password1.toUpperCase() !== password1);\r\n    //setHasNumber(/\\d/.test(password1));\r\n    //setMatch(password1 && password1 === password2);\r\n    setSpecialChar(/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(password1));\r\n  }, [password1, password2, requiredLength]);\r\n\r\n  return [validLength, upperCase, lowerCase, specialChar];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Signup from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Signup />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}